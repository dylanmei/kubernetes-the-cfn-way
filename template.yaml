AWSTemplateFormatVersion: 2010-09-09
Description: Kubernetes Stack
Resources:
  Vpc:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: "10.240.0.0/16"
      EnableDnsSupport: True
      EnableDnsHostnames: True
      Tags:
        - Key: Name
          Value: kubernetes

  DhcpOptions:
    Type: "AWS::EC2::DHCPOptions"
    Properties:
      DomainName: us-west-2.compute.internal
      DomainNameServers: ["AmazonProvidedDNS"]
      Tags:
        - Key: Name
          Value: kubernetes

  DhcpOptionsAssociation:
    Type: "AWS::EC2::VPCDHCPOptionsAssociation"
    Properties:
      DhcpOptionsId: !Ref "DhcpOptions"
      VpcId: !Ref "Vpc"

  Subnet:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref "Vpc"
      CidrBlock: "10.240.0.0/16"
      Tags:
        - Key: Name
          Value: kubernetes

  InternetGateway:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
        - Key: Name
          Value: kubernetes

  GatewayAttachment:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      VpcId: !Ref "Vpc"
      InternetGatewayId: !Ref "InternetGateway"

  RouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref "Vpc"
      Tags:
        - Key: Name
          Value: kubernetes

  RouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref "RouteTable"
      SubnetId: !Ref "Subnet"

  Route:
    Type: "AWS::EC2::Route"
    Properties:
      RouteTableId: !Ref "RouteTable"
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref "InternetGateway"

  SecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Kubernetes security group"
      SecurityGroupIngress:
        - IpProtocol: -1
          FromPort:   0
          ToPort:     65535
          CidrIp:     "10.240.0.0/16"
        - IpProtocol: tcp
          FromPort:   22
          ToPort:     22
          CidrIp:     "0.0.0.0/0"
        - IpProtocol: tcp
          FromPort:   6443
          ToPort:     6443
          CidrIp:     "0.0.0.0/0"
      VpcId: !Ref "Vpc"
      Tags:
        - Key: Name
          Value: kubernetes


  LoadBalancer:
    Type: "AWS::ElasticLoadBalancing::LoadBalancer"
    Properties:
      LoadBalancerName: "kubernetes"
      Subnets:
        - !Ref "Subnet"
      SecurityGroups:
        - !Ref "SecurityGroup"
      Listeners:
        - Protocol: TCP
          LoadBalancerPort: 6443
          InstanceProtocol: TCP
          InstancePort: 6443

  Role:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: kubernetes
      AssumeRolePolicyDocument: |
        {
          "Version": "2012-10-17",
          "Statement": [
            {"Effect": "Allow", "Principal": { "Service": "ec2.amazonaws.com"}, "Action": "sts:AssumeRole"}
          ]
        }
      Policies:
        - PolicyName: kubernetes
          PolicyDocument: |
            {
              "Version": "2012-10-17",
              "Statement": [
                {"Effect": "Allow", "Action": ["ec2:*"], "Resource": ["*"]},
                {"Effect": "Allow", "Action": ["elasticloadbalancing:*"], "Resource": ["*"]},
                {"Effect": "Allow", "Action": ["route53:*"], "Resource": ["*"]},
                {"Effect": "Allow", "Action": ["ecr:*"], "Resource": ["*"]}
              ]
            }

  InstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Path: "/"
      Roles:
        - !Ref "Role"
